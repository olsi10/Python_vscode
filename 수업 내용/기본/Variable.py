##변수와 함수 소개

#변수
#프로그래밍 작업을 할 때 기본적으로 변수 함수 필요
#변수 : 값을 저장하기 위한 공간. 저장된 것은 변할 수 있다.
#프로그램을 작성하면서 변수에 임의의 값을 담거나 함수가 리턴하는 값을 저장


#함수
#종류 : 필요한 기능이 미리 구현되어 있는 빌트인 함수 / 사용자가 직접 정의한 함수
#API(Application Programming Interface)
#len()이라는 내장 함수를 입력 파라메터(입력 데이터)로 넘겨진 문자열의 길이를 리턴한다

# strB = "파이썬 연습"
# print(len(strB))
#6자리인 것을 보면 유니코드 사용

#변수명
#대소문자 구분 Freind와 friend는 다른 변수
#코딩을 할 때 대소문자 일치 확인필요
#비주얼 베이직 같은 언어는 구별 x c계열 언어는 구분

#숫자형
#int, float 같은 형식

#문자열형식
#"데이터", "전우치"로 초기화
#문자열 데이터는 반드시 ""나 "로 묶어야 함
#파이썬에서는 ""와 "를 구분하지 않음

#불린형식
#Ture, False 사용 (대문자로 시작)

#파이썬키워드
#파이썬 언어에서 제공되는 기본적인 문장
#미리 정의되어 있는 단어
#변수명이나 함수명으로 사용불가
#파이썬 키워드는 대략 35개
#####키워드는 서치해서 찾아보기####

# import keyword
# print(keyword.kwlist)

#자료형
#숫자형 정수 실수
#문자열 문자들의 모음
#리스트 순서를 가지는 파이썬의 임의 객체 집합 [] 사용
#사전   순서를 가지지 않는 객체의 집합, 키로 값을 꺼낸다. {} 사용
#튜플   순서를 가지는 파이썬의 임의 객체 집합으로 내용 변경이 안됨 ()
#세트   순서를 가지지 않는 유일한 값의 집합형태로 사용, 합집합, 교집합, 차집합을 구할 경우 사용 {}1



#클래스 안에 정의된 것 -> 메소드

#type
# strA = "Hello python"
# x = 5
# y = 3.14

# print(type(strA))
# print(type(x))
# print(type(y))

#
# \n 줄바꿈
# \t 탭
# \r 캐리지 반환
# \0 널
# \\ \문자
# \' 단일부호
# \" 부호

# print("py""thon")
# print("py" + "thon")
# print("py"*3)

# strA = "python"
# print(strA[0])

# #0부터 시작하고 끝부분에서는 자기번호 제외
# print(strA[0:1]) #1까지 나옴
# print(strA[1:3]) #yt
# print(strA[:2])
# print(strA[-2:])
# print(strA[:])

# str8 = "python is powerful"
# # print(str8[0])
# # print(str8[0:8])
# # print(str8[:6])

# # print(str8[-1])
# # print(str8[-2])
# # print(str8[-3:1])
# # print(str8[-8:])

# # print(str8[::2])
# # #시작, 끝 간격 두 칸씩 띄고 출력
# # print(str8[7:18])

# # print(str8[-11:9])
# # print(str8[-18:10])